//Program to remove all occurrences of a number in an array


//FIRST APPROACH
#include <iostream>
const int SIZE=100;

void readArray(int arr[], int n)

{

    for (int i=0; i<n; i++)

    {
        std::cin>>arr[i];
    }

}

void removeOccurences(int *arr, int n, int numToRemove)
{
    for (int i=0; i<n; i++)
    {
        if (arr[i]!=numToRemove)
        {
            std::cout<<arr[i]<<" ";
        }
    }

}


int main()

{

    int arr[SIZE]={0};
    int n;
    std::cin>>n;
    readArray(arr,n);
    int num;
    std::cin>>num;
    removeOccurences(arr,n,num);

    return 0;

}


//SECOND APPROACH

#include <iostream>
#include <vector>

std::vector <int> readInput()
{
    int size=0;
    std::cin>>size;

    std::vector<int>vec(size);

    for (size_t i=0; i<vec.size(); ++i)
    {
        std::cin>>vec[i];
    }
    return vec;
}

void removeOccurrences(const std::vector<int>&vector, int numberToRemove)
{
    int s=0;
    s=vector.size();
    for (size_t i=0; i<s; ++i)
    {
        if (vector[i]!=numberToRemove)
        {
            std::cout<<vector[i]<<" ";
        }
    }
}

int main()
{
    const std::vector<int> vec=readInput();
    int num;
    std::cin>>num;
    removeOccurrences(vec,num);






    return 0;

}

